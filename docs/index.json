[{"categories":["Writeups"],"content":"A writeup on nullcon CTF 2023 - Breaking news","date":"2023-03-10","objectID":"/dashaus165blog/breaking-news/","tags":["writeups","crypto","nullcon2023"],"title":"nullcon HackIM CTF Berlin 2023: breaking news","uri":"/dashaus165blog/breaking-news/"},{"categories":["Writeups"],"content":"A writeup on nullcon CTF 2023 - Breaking news Challenge Information\rGiven materials: Get it here! Description: Alice started to encrypt the flag, but realised halfway she was unhappy with her key. So she created a new one. Category: Crypto The encyption code is shown below: from Crypto.PublicKey import RSA from secret import flag from Crypto.Cipher import PKCS1_OAEP from Crypto.Util.number import inverse from binascii import hexlify key1 = RSA.import_key(open('key1.pem','rb').read()) key2 = RSA.import_key(open('key2.pem','rb').read()) msg1 = flag[:len(flag)//2] msg2 = flag[len(flag)//2:] cryptor = PKCS1_OAEP.new(key1) c1 = cryptor.encrypt(msg1) cryptor = PKCS1_OAEP.new(key2) c2 = cryptor.encrypt(msg2) writer = open('ciphers','wb') writer.write(hexlify(c1) + b'\\n' + hexlify(c2)) writer.close() The ciphertexts: c1 = \"3b6ccd7fa1de0455945998bc024adc6c2b60ccc8f020cbf024c3d4f98eafdf6a43afd15ec4d9a32f84cb61f7a5462547f2e3622b547c3e9ccb723102805544b373a80f4d252a1081db6d5c5499b222093fd4bb7997c68ab0ed8a9ac3bd0dae64cdfb946da1e311ef6e216ddf2dac14ea3710d5622269f08073598c24a3000a6dd6270ca0db5c304102bc9a5cd104484a2c0ced339121f13499c795de343ad2e655d4ace726654ee9f110e4bee3db95d8e514bd6e658769a01638ff2e9ce954dc09def3b01f6d598ddae2ca9735c8e8f9b71c96984a114084fb0a25b3646481e8c8d4d8adfedc7afad7be7a009c6d12753db4216ab9fd7fc8c37c819aef6a8bce\" c2 = \"998d5eeb0c048ade8cd807cb582b15a7799e8481a7476dbe8e0310b5ffc5161add92539bc0a374333c11f5f2008195782a44e45f2394fe3115af59fbc73ad24c4d084d79ba8e5896b644917335fd9a0e07c1d1d316e50480ba44c67b6fc04a2ce33dbc721768f1f874ff2ce1ec0503a4a7c67d10119ff9f79030459068de24ff24593e16877fd74c5a12d0e64a3d62e61b13c403aad2fe605601e8a097aba99707e305e3125a3c89f3d6beccc2f19a32fdac9ab7df181938b9b80d83a54c9c23ef11affff0fca67ecd9d45c58ece90a44ecd60aff7be05bf97cb554c563a3f9139d99f7c76a07acaaa261b1d6cb41e228fb2aca02ed1c64d468aabb8cfaa9210\" It seems that the encryption of the first and the last half of flag is not relevant. But at least we should check the public key and the modulus of key1.pem and key2.pem. from Crypto.PublicKey import RSA key1 = RSA.import_key(open('breaking_news\\key1.pem','rb').read()) key2 = RSA.import_key(open('breaking_news\\key2.pem','rb').read()) e1 = key1.e e2 = key2.e n1 = key1.n n2 = key2.n e1 (bit_length = 2045): 2726678763069742290493975678771854042946997886526658885273589794982550850524484749274268692898909814780790152954912126546903921714367517303032050244891472514523849708519935681313568761427297382724990480371626349446130805480456004417663238567505831802110513475009108333474503714942886902760554023856774744528158730164306665386046820676766827602146514316823937019543742466850364749529076296428648908924805389552335245924389342424467024736023185451341764743413642429057857014342930366786601460889647066379811076861622890568687138322791084455379633576246829677348537342669805283721207716632578516825617674863582898823857 n1 (bit_length = 2048): 22446667384135380364728550075881381726053468195188168013152415796352249451953078762739428049146187827398120100488504055606635548019009256889092903583429161620832130884808020463159053237738268615549212998960185401460575049040129569674912795281010462969369309454450379821434551440286230754665181962106098655531061808191857271372118647412341530534507363035768520018955713235360762429287435263772391386477249961479679573552073377992778864273735159890546438757223394182339510136036600928909879322891169743059815434712294601960066048614718984000476293007036534025674690519367295530441293542361110626472198678166093083778539 e2 (bit_length = 2047): 1025614691538937680473350384937839404022673831543804873390821235642349784468976380689985141971347728145167220859932279361921851630754436084881310527467399581064169495199510518576682055075870988700464507436921496419813225182888368322755063851582948247904399276524553429044729402973825513752800743408745783376473721224429168610790081938366519110824829336786992193261655888040783602954129146564842167332117396899423321041617438046837454077677830936561","date":"2023-03-10","objectID":"/dashaus165blog/breaking-news/:0:0","tags":["writeups","crypto","nullcon2023"],"title":"nullcon HackIM CTF Berlin 2023: breaking news","uri":"/dashaus165blog/breaking-news/"},{"categories":["Writeups"],"content":"The first half I tried and happily it’s broken by the Wiener Attack. For the Wiener Attack, readers should read this. Here is the code: import owiener N = n1 try: d1 = owiener.attack(e1, N) k1 = RSA.construct((N, e1, d1)) cryptor1 = PKCS1_OAEP.new(k1) c1 = bytes.fromhex(c1) print(cryptor1.decrypt(c1)) except: print(\"Failed\") The library owiener is in this repo. Result: b'ENO{n3ver_reus3_your_pr1mes_4_a_' ","date":"2023-03-10","objectID":"/dashaus165blog/breaking-news/:1:0","tags":["writeups","crypto","nullcon2023"],"title":"nullcon HackIM CTF Berlin 2023: breaking news","uri":"/dashaus165blog/breaking-news/"},{"categories":["Writeups"],"content":"The last half The last half is not that easy. I tried the same attack and it failed. But maybe we can exploit some properties from known key (e1, d1) in the previous section. Fortunately, it does! Based on this paper of Prof. Dan Boneh, the factorization of $N$ can be computed in polynomial time when we’re given one pair (e, d). One implementation of this fast-factor algorithm is available in this repo. I made a tiny optimization in operator to make it works with big numbers, you can try to guess what it is, hehe. Here is the code: p, q = factor(N, e1, d1) phi = (p - 1) * (q - 1) d2 = inverse(e2, phi) k2 = RSA.construct((N, e2, d2)) cryptor2 = PKCS1_OAEP.new(k2) print(cryptor1.decrypt(c1) + cryptor2.decrypt(c2)) The final result: b'ENO{n3ver_reus3_your_pr1mes_4_a_new_k3y_you_have_2_p4y_th3_pr1ce}' ","date":"2023-03-10","objectID":"/dashaus165blog/breaking-news/:2:0","tags":["writeups","crypto","nullcon2023"],"title":"nullcon HackIM CTF Berlin 2023: breaking news","uri":"/dashaus165blog/breaking-news/"},{"categories":["Writeups"],"content":"Conclusion This challange is very helpful to me, because it contains many (2) important attacks that I forgot. It’s a nice chance to review RSA! ","date":"2023-03-10","objectID":"/dashaus165blog/breaking-news/:3:0","tags":["writeups","crypto","nullcon2023"],"title":"nullcon HackIM CTF Berlin 2023: breaking news","uri":"/dashaus165blog/breaking-news/"},{"categories":["Mathematics"],"content":"\rNote\rThis article is written by chatGPT. This is for catergories testing purpose.\rIntroduction to Finite Fields Finite fields, also known as Galois fields, are algebraic structures that are widely used in many areas of mathematics, including cryptography, coding theory, and number theory. In this article, we will introduce the basics of finite fields and explore some of their properties. ","date":"2023-03-02","objectID":"/dashaus165blog/eigenvalues_and_eigenvectors/:0:0","tags":["math","mathematic"],"title":"Introduction to Finite Fields","uri":"/dashaus165blog/eigenvalues_and_eigenvectors/"},{"categories":["Mathematics"],"content":"Definition A finite field is a field that contains a finite number of elements. More formally, a finite field is a field $(F, +, \\cdot)$ where $F$ is a finite set of elements, and $+$ and $\\cdot$ are binary operations on $F$ that satisfy the following axioms: $(F, +)$ is an abelian group. $(F\\setminus{0}, \\cdot)$ is an abelian group. The distributive law holds: $a\\cdot (b+c) = a\\cdot b + a\\cdot c$ for all $a,b,c\\in F$. In other words, a finite field is a field where addition and multiplication are well-defined, and where the set of elements is finite. ","date":"2023-03-02","objectID":"/dashaus165blog/eigenvalues_and_eigenvectors/:1:0","tags":["math","mathematic"],"title":"Introduction to Finite Fields","uri":"/dashaus165blog/eigenvalues_and_eigenvectors/"},{"categories":["Mathematics"],"content":"Examples There are many examples of finite fields, but perhaps the most well-known is the field of integers modulo a prime $p$. This field is denoted by $\\mathbb{F}_p$, and consists of the integers $0, 1, 2, \\ldots, p-1$. Addition and multiplication are performed modulo $p$, so that for example $5 + 7 \\equiv 0 \\pmod{12}$ and $3 \\cdot 4 \\equiv 0 \\pmod{12}$. It can be shown that $\\mathbb{F}_p$ is a field under these operations. Another example of a finite field is the field of integers modulo a power of a prime. For example, the field $\\mathbb{F}_{p^2}$ consists of the polynomials of degree at most 1 with coefficients in $\\mathbb{F}_p$, i.e. the set ${0, 1, x, x+1}$ where addition and multiplication are performed modulo $p$ and with the rule $x^2 = x+1$. This field is also a finite field. ","date":"2023-03-02","objectID":"/dashaus165blog/eigenvalues_and_eigenvectors/:2:0","tags":["math","mathematic"],"title":"Introduction to Finite Fields","uri":"/dashaus165blog/eigenvalues_and_eigenvectors/"},{"categories":["Mathematics"],"content":"Properties Finite fields have many interesting properties that make them useful in various applications. Here are some of the most important properties: Every finite field has a prime power order. That is, if $F$ is a finite field with $q$ elements, then $q=p^n$ for some prime $p$ and some positive integer $n$. Conversely, every field of order $p^n$ is isomorphic to the field of integers modulo $p^n$. Finite fields are unique up to isomorphism. That is, if $F$ and $F’$ are two finite fields with the same number of elements, then there exists an isomorphism $\\phi:F\\to F’$. Addition and multiplication tables for a finite field can be represented by a matrix of size $q\\times q$, where $q$ is the number of elements in the field. These matrices have many interesting properties, including being invertible and having a non-zero determinant. The non-zero elements of a finite field form a cyclic group under multiplication. This group is generated by a primitive element of the field, i.e. an element $g$ such that every non-zero element of the field can be expressed as a power of $g$. ","date":"2023-03-02","objectID":"/dashaus165blog/eigenvalues_and_eigenvectors/:3:0","tags":["math","mathematic"],"title":"Introduction to Finite Fields","uri":"/dashaus165blog/eigenvalues_and_eigenvectors/"},{"categories":["Mathematics"],"content":"Conclusion Finite fields are fascinating algebraic structures with many interesting properties. They are used in a wide range of applications, including coding theory, cryptography, and number theory. ","date":"2023-03-02","objectID":"/dashaus165blog/eigenvalues_and_eigenvectors/:4:0","tags":["math","mathematic"],"title":"Introduction to Finite Fields","uri":"/dashaus165blog/eigenvalues_and_eigenvectors/"},{"categories":["Physics"],"content":"\rNote\rThis article is written by chatGPT. This is for catergories testing purpose.\rIntroduction to Quantum Physics Quantum physics is a branch of physics that deals with the behavior of matter and energy at the atomic and subatomic level. It is a fundamental theory that describes the behavior of particles such as electrons, protons, and photons. Unlike classical physics, which is based on the laws of classical mechanics, quantum physics is based on the laws of quantum mechanics, which are fundamentally different from classical mechanics. ","date":"2023-03-02","objectID":"/dashaus165blog/introduction_to_quantum_physics.md/:0:0","tags":["physics","quantum"],"title":"Introduction to Quantum Physics","uri":"/dashaus165blog/introduction_to_quantum_physics.md/"},{"categories":["Physics"],"content":"The Basic Principles of Quantum Mechanics Quantum mechanics is based on several fundamental principles that are different from classical mechanics. These principles include: Wave-Particle Duality: According to quantum mechanics, particles can exhibit both wave-like and particle-like behavior. This means that particles can exist in a superposition of states, where they can be in multiple positions or energy levels at the same time. Quantization of Energy: The energy of a particle is not continuous, but rather comes in discrete units known as quanta. The energy of a particle is determined by its wave function, which describes the probability of finding the particle in a particular energy state. Uncertainty Principle: According to the uncertainty principle, it is impossible to know the precise position and momentum of a particle at the same time. This means that the more accurately we know the position of a particle, the less accurately we can know its momentum, and vice versa. ","date":"2023-03-02","objectID":"/dashaus165blog/introduction_to_quantum_physics.md/:1:0","tags":["physics","quantum"],"title":"Introduction to Quantum Physics","uri":"/dashaus165blog/introduction_to_quantum_physics.md/"},{"categories":["Physics"],"content":"The Schrödinger Equation The Schrödinger equation is a central equation in quantum mechanics that describes the evolution of a particle’s wave function over time. It is a partial differential equation that is used to calculate the probability of finding a particle in a particular state. The Schrödinger equation is given by: $$i\\hbar\\frac{\\partial}{\\partial t}\\Psi(\\mathbf{r},t) = \\hat{H}\\Psi(\\mathbf{r},t)$$ where $\\Psi(\\mathbf{r},t)$ is the wave function of the particle, $\\hat{H}$ is the Hamiltonian operator that describes the total energy of the particle, and $\\hbar$ is the reduced Planck constant. ","date":"2023-03-02","objectID":"/dashaus165blog/introduction_to_quantum_physics.md/:2:0","tags":["physics","quantum"],"title":"Introduction to Quantum Physics","uri":"/dashaus165blog/introduction_to_quantum_physics.md/"},{"categories":["Physics"],"content":"Quantum States and Observables In quantum mechanics, a system is described by its quantum state, which is represented by a wave function. The wave function provides information about the probability of finding the system in a particular state. Observables in quantum mechanics are represented by Hermitian operators, which are used to measure the properties of a system. The measurement of an observable corresponds to the eigenvalue of the corresponding operator. ","date":"2023-03-02","objectID":"/dashaus165blog/introduction_to_quantum_physics.md/:3:0","tags":["physics","quantum"],"title":"Introduction to Quantum Physics","uri":"/dashaus165blog/introduction_to_quantum_physics.md/"},{"categories":["Physics"],"content":"Quantum Entanglement Quantum entanglement is a phenomenon in which two or more particles become connected in such a way that the state of one particle is dependent on the state of the other particle, even if the particles are separated by a large distance. This phenomenon has been demonstrated experimentally and has important implications for quantum computing and quantum communication. ","date":"2023-03-02","objectID":"/dashaus165blog/introduction_to_quantum_physics.md/:4:0","tags":["physics","quantum"],"title":"Introduction to Quantum Physics","uri":"/dashaus165blog/introduction_to_quantum_physics.md/"},{"categories":["Physics"],"content":"Conclusion Quantum mechanics is a fundamental theory that describes the behavior of matter and energy at the atomic and subatomic level. It is based on several principles that are different from classical mechanics, including wave-particle duality, quantization of energy, and the uncertainty principle. The Schrödinger equation is a central equation in quantum mechanics that describes the evolution of a particle’s wave function over time. Quantum mechanics has important applications in a wide range of fields, including quantum computing, quantum communication, and materials science. ","date":"2023-03-02","objectID":"/dashaus165blog/introduction_to_quantum_physics.md/:5:0","tags":["physics","quantum"],"title":"Introduction to Quantum Physics","uri":"/dashaus165blog/introduction_to_quantum_physics.md/"},{"categories":null,"content":"About Me","date":"0001-01-01","objectID":"/dashaus165blog/about/","tags":null,"title":"About Me","uri":"/dashaus165blog/about/"},{"categories":null,"content":"Some Background Informations I am Hao Pham-Duc (dasHaus165), a Cryptographer from the Bach Khoa Information Security Club (BKISC), Ho Chi Minh City University of Technology (HCMUT). ","date":"0001-01-01","objectID":"/dashaus165blog/about/:1:0","tags":null,"title":"About Me","uri":"/dashaus165blog/about/"},{"categories":null,"content":"Interests Applied Cryptography Machine Learning Classical and Quantum Physics ","date":"0001-01-01","objectID":"/dashaus165blog/about/:2:0","tags":null,"title":"About Me","uri":"/dashaus165blog/about/"},{"categories":null,"content":"Achievements Nothing yet. ","date":"0001-01-01","objectID":"/dashaus165blog/about/:3:0","tags":null,"title":"About Me","uri":"/dashaus165blog/about/"},{"categories":null,"content":"Contact Me You can contact me via Email or Github. ","date":"0001-01-01","objectID":"/dashaus165blog/about/:4:0","tags":null,"title":"About Me","uri":"/dashaus165blog/about/"}]